{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","axios","require","default","useMarvelService","useState","process","setProcess","clearError","useCallback","_apiBase","_apiKey","_baseOffset","getAllCharacters","a","offset","get","res","data","results","map","_transformChar","getCharacter","id","getCharacterByName","name","char","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","available","items","getSingleComic","_transformComics","getAllComics","title","pages","pageCount","shop","prices","price","AppBanner","className","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","props","comicsList","setComicsList","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","onComicsListLoaded","newComicsList","ended","charList","length","initial","then","catch","arr","item","to","renderItems","disabled","onClick","ComicsPage","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/6.3c3e360c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img \r\n      style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} \r\n      src={img} alt=\"Loading error\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback } from \"react\";\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst useMarvelService = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=1993ba6ffb336a484ae8d64ac5c9983a';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformChar);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const _transformChar = (char) => {\r\n    return {\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'No description for this character...',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      id: char.id,\r\n      comics: char.comics.available !== 0 ? char.comics.items.slice(0, 10) : [{name: 'No information about comics...'}],\r\n    }\r\n  }\r\n\r\n  const getSingleComic = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformComics);\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      title: comics.title,\r\n      description: comics.description ? comics.description : 'No description for this comic...',\r\n      pages: comics.pageCount + ' pages',\r\n      shop: comics.urls.url,\r\n      prices: comics.prices[0].price ? comics.prices[0].price + '$' : 'No price information...',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      id: comics.id,\r\n    }\r\n  }\r\n\r\n  return {\r\n    process, \r\n    setProcess, \r\n    getAllCharacters, \r\n    getCharacter, \r\n    getCharacterByName, \r\n    getSingleComic, \r\n    getAllComics, \r\n    clearError,\r\n  }\r\n}\r\n\r\nexport default useMarvelService;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n  return (\r\n    <div className=\"app__banner\">\r\n      <img src={avengers} alt=\"Avengers\"/>\r\n      <div className=\"app__banner-text\">\r\n        New comics every week!<br/>\r\n        Stay tuned!\r\n      </div>\r\n      <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppBanner;","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Spinner/>;\r\n    case 'loading':\r\n      return newItemLoading ? <Component/> : <Spinner/>;\r\n    case 'confirmed':\r\n      return <Component/>;\r\n    case 'error': \r\n      return <ErrorMessage/>;\r\n    default: \r\n      break;\r\n  }\r\n}\r\n\r\nconst ComicsList = (props) => {\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  const {process, setProcess, getAllComics} = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const onComicsListLoaded = (newComicsList) => {\r\n    let ended = false;\r\n    if (newComicsList < 8) {\r\n      ended = true;\r\n    }\r\n\r\n    setComicsList(charList => [...comicsList, ...newComicsList]);\r\n    setNewItemLoading(newItemLoading => false);\r\n    setOffset(offset => offset + newComicsList.length);\r\n    setComicsEnded(comicsEnded => ended);\r\n  }\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllComics(offset)\r\n      .then(onComicsListLoaded)\r\n      .then(() => setProcess('confirmed'))\r\n      .catch(() => setProcess('error'));\r\n  }\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map(item => {\r\n      return (\r\n        <li className=\"comics__item\"\r\n          key={item.id}>\r\n          <Link to={`/comics/${item.id}`}>\r\n            <img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n            <div className=\"comics__item-name\">{item.title}</div>\r\n            <div className=\"comics__item-price\">{item.prices}</div>\r\n          </Link>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <ul className=\"comics__grid\">\r\n        {items}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\r\n      <button className=\"button button__main button__long\"\r\n        disabled={newItemLoading}\r\n        style={{'display': comicsEnded ? 'none' : 'block'}}\r\n        onClick={() => onRequest(offset)}>\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner/>\r\n      <ComicsList/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComicsPage;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}