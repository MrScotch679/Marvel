{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","components/pages/MainPage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","axios","require","default","useMarvelService","useState","process","setProcess","clearError","useCallback","_apiBase","_apiKey","_baseOffset","getAllCharacters","a","offset","get","res","data","results","map","_transformChar","getCharacter","id","getCharacterByName","name","char","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","available","items","getSingleComic","_transformComics","getAllComics","title","pages","pageCount","shop","prices","price","View","imgObjectFit","includes","className","href","RandomChar","setChar","useEffect","updateChar","Math","floor","random","then","onCharLoaded","catch","setContent","onClick","mjolnir","Component","newItemLoading","Spinner","CharList","props","charList","setCharList","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","arr","item","imgStyle","selectedChar","tabIndex","onCharSelected","onKeyPress","e","code","renderItems","disabled","i","CharInfo","charId","ErrorBoundary","state","error","errorInfo","console","log","this","setState","children","CharSearchForm","errorMessage","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","MainPage","decoration","Skeleton"],"mappings":"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","file":"static/js/5.bafb1d27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img \r\n      style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} \r\n      src={img} alt=\"Loading error\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback } from \"react\";\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst useMarvelService = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=1993ba6ffb336a484ae8d64ac5c9983a';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformChar);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const _transformChar = (char) => {\r\n    return {\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'No description for this character...',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      id: char.id,\r\n      comics: char.comics.available !== 0 ? char.comics.items.slice(0, 10) : [{name: 'No information about comics...'}],\r\n    }\r\n  }\r\n\r\n  const getSingleComic = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformComics);\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      title: comics.title,\r\n      description: comics.description ? comics.description : 'No description for this comic...',\r\n      pages: comics.pageCount + ' pages',\r\n      shop: comics.urls.url,\r\n      prices: comics.prices[0].price ? comics.prices[0].price + '$' : 'No price information...',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      id: comics.id,\r\n    }\r\n  }\r\n\r\n  return {\r\n    process, \r\n    setProcess, \r\n    getAllCharacters, \r\n    getCharacter, \r\n    getCharacterByName, \r\n    getSingleComic, \r\n    getAllComics, \r\n    clearError,\r\n  }\r\n}\r\n\r\nexport default useMarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\n  const [char, setChar] = useState({});\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const {process, setProcess, getCharacter, clearError} = useMarvelService();\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\r\n    getCharacter(id)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess('confirmed'))\r\n      .catch(() => setProcess('error'));\r\n  }\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {setContent(process, View, char)}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!<br/>\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">\r\n          Or choose another one\r\n        </p>\r\n        <button className=\"button button__main\"\r\n          onClick={updateChar}>\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst View = ({data}) => {\r\n  const {name, description, thumbnail, homepage, wiki} = data;\r\n  let imgObjectFit = 'cover';\r\n  \r\n  if (thumbnail && thumbnail.includes('image_not_available')) {\r\n    imgObjectFit = 'contain';\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n    <img \r\n      src={thumbnail} \r\n      alt=\"Random character\" \r\n      className=\"randomchar__img\"\r\n      style={{objectFit: `${imgObjectFit}`}}\r\n      />\r\n    <div className=\"randomchar__info\">\r\n      <p className=\"randomchar__name\">{name}</p>\r\n      <p className=\"randomchar__descr\">\r\n        {description}\r\n      </p>\r\n      <div className=\"randomchar__btns\">\r\n        <a href={homepage} className=\"button button__main\">\r\n          <div className=\"inner\">homepage</div>\r\n        </a>\r\n        <a href={wiki} className=\"button button__secondary\">\r\n          <div className=\"inner\">Wiki</div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default RandomChar;","import { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Spinner/>;\r\n    case 'loading':\r\n      return newItemLoading ? <Component/> : <Spinner/>;\r\n    case 'confirmed':\r\n      return <Component/>;\r\n    case 'error': \r\n      return <ErrorMessage/>;\r\n    default: \r\n      break;\r\n  }\r\n}\r\n\r\nconst CharList  = (props) => {\r\n\r\n  const [charList, setCharList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const {process, setProcess, getAllCharacters} = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\r\n    getAllCharacters(offset)\r\n      .then(onCharListLoaded)\r\n      .then(() => setProcess('confirmed'))\r\n      .catch(() => setProcess('error'));\r\n  }\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setCharList(charList => [...charList, ...newCharList]);\r\n    setNewItemLoading(newItemLoading => false);\r\n    setOffset(offset => offset + 9);\r\n    setCharEnded(charEnded => ended);\r\n  }\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item) => {\r\n      let imgStyle = {'objectFit' : 'cover'};\r\n      if (item.thumbnail.includes('image_not_available')) {\r\n        imgStyle = {'objectFit' : 'unset'};\r\n      }\r\n\r\n      let className = 'char__item';\r\n      if (item.id === props.selectedChar) {\r\n        className += ' char__item_selected'\r\n      }\r\n\r\n      return (\r\n        <li className={className}\r\n          tabIndex={0}\r\n          key={item.id}\r\n          onClick={ () => props.onCharSelected(item.id) }\r\n          onKeyPress={ (e) => e.code === 'Enter' ? props.onCharSelected(item.id) : null }>\r\n            <img src={item.thumbnail} \r\n              alt={item.name}\r\n              style={imgStyle}/>\r\n            <div className=\"char__name\">{item.name}</div>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <ul className=\"char__grid\">\r\n        {items}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      {setContent(process, () => renderItems(charList), newItemLoading)}\r\n      <button className=\"button button__main button__long\"\r\n          disabled={newItemLoading}\r\n          style={{'display': charEnded ? 'none' : 'block'}}\r\n          onClick={() => onRequest(offset)}>\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default CharList;","import { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n\r\n  const [char, setChar] = useState(null);\r\n  const {process, setProcess, getCharacter, clearError} = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, [props.charId]);\r\n\r\n  const updateChar = () => {\r\n    const {charId} = props;\r\n\r\n    if(!charId) {\r\n      return;\r\n    }\r\n\r\n    clearError();\r\n\r\n    getCharacter(charId)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess('confirmed'))\r\n      .catch(() => setProcess('error'));\r\n  }\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  }\r\n\r\n  return (\r\n    <div className=\"char__info\">\r\n      {setContent(process, View, char)}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst View = ({data}) => {\r\n  const {name, description, thumbnail, homepage, wiki, comics} = data;\r\n  let imgStyle = {'objectFit' : 'cover'};\r\n\r\n  if (thumbnail.includes('image_not_available')) {\r\n    imgStyle = {'objectFit' : 'unset'};\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle}/>\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">\r\n        {description}\r\n      </div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n\r\n        {\r\n          comics.map((item, i) => {\r\n            return (\r\n              <li key={i} className=\"char__comics-item\">\r\n                {item.name}\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n\r\n    this.setState({\r\n      error: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n  const [char, setChar] = useState('');\r\n  const {process, setProcess, getCharacterByName, clearError} = useMarvelService();\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  }\r\n\r\n  const updateChar = (name) => {\r\n    clearError();\r\n\r\n    getCharacterByName(name)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess('confirmed'))\r\n      .catch(() => setProcess('error'));\r\n  }\r\n\r\n  const errorMessage = process === 'error' ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n  const results = !char ? null : \r\n    char ?\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">There is! Visit {char.name} page?</div>\r\n      <Link to={`/characters/${char.name}`} className=\"button button__secondary\">\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div> \r\n    : \r\n    <div className=\"char__search-error\">\r\n      The character was not found. Check the name and try again\r\n    </div>;\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues = {{\r\n          charName: char\r\n        }}\r\n        validationSchema = {Yup.object({\r\n          charName: Yup.string().required('This field is required')\r\n        })}\r\n        onSubmit = { ({charName}) => {\r\n          updateChar(charName);\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field \r\n              id=\"charName\" \r\n              name='charName' \r\n              type='text' \r\n              placeholder=\"Enter name\"/>\r\n            <button \r\n              type='submit' \r\n              className=\"button button__main\"\r\n              disabled={process === 'loading'}>\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n        </Form>\r\n      </Formik>\r\n      {results}\r\n      {errorMessage}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharSearchForm;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <ErrorBoundary>   \r\n        <RandomChar/>\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList \r\n            onCharSelected={onCharSelected}\r\n            selectedChar={selectedChar}/>\r\n        </ErrorBoundary>\r\n        <div>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar}/>\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharSearchForm />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPage;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n  return (\r\n    <>\r\n      <p className=\"char__select\">Please select a character to see information</p>\r\n      <div className=\"skeleton\">\r\n        <div className=\"pulse skeleton__header\">\r\n          <div className=\"pulse skeleton__circle\"></div>\r\n          <div className=\"pulse skeleton__mini\"></div>\r\n        </div>\r\n        <div className=\"pulse skeleton__block\"></div>\r\n        <div className=\"pulse skeleton__block\"></div>\r\n        <div className=\"pulse skeleton__block\"></div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Skeleton/>;\r\n    case 'loading':\r\n      return <Spinner/>;\r\n    case 'confirmed':\r\n      return <Component data={data}/>;\r\n    case 'error': \r\n      return <ErrorMessage/>;\r\n    default: \r\n      break;\r\n  }\r\n}\r\n\r\nexport default setContent;"],"sourceRoot":""}