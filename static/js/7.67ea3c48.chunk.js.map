{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","components/pages/singleCharacterPage/SingleCharacterPage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","axios","require","default","useMarvelService","useState","process","setProcess","clearError","useCallback","_apiBase","_apiKey","_baseOffset","getAllCharacters","a","offset","get","res","data","results","map","_transformChar","getCharacter","id","getCharacterByName","name","char","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","available","items","getSingleComic","_transformComics","getAllComics","title","pages","pageCount","shop","prices","price","View","className","to","SingleCharacterPage","characterName","useParams","setChar","useEffect","updateChar","then","onComicLoaded","catch","setContent","Skeleton","Component","Spinner"],"mappings":"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","file":"static/js/7.67ea3c48.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img \r\n      style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} \r\n      src={img} alt=\"Loading error\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback } from \"react\";\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst useMarvelService = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=1993ba6ffb336a484ae8d64ac5c9983a';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformChar);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const _transformChar = (char) => {\r\n    return {\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'No description for this character...',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      id: char.id,\r\n      comics: char.comics.available !== 0 ? char.comics.items.slice(0, 10) : [{name: 'No information about comics...'}],\r\n    }\r\n  }\r\n\r\n  const getSingleComic = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformComics);\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      title: comics.title,\r\n      description: comics.description ? comics.description : 'No description for this comic...',\r\n      pages: comics.pageCount + ' pages',\r\n      shop: comics.urls.url,\r\n      prices: comics.prices[0].price ? comics.prices[0].price + '$' : 'No price information...',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      id: comics.id,\r\n    }\r\n  }\r\n\r\n  return {\r\n    process, \r\n    setProcess, \r\n    getAllCharacters, \r\n    getCharacter, \r\n    getCharacterByName, \r\n    getSingleComic, \r\n    getAllComics, \r\n    clearError,\r\n  }\r\n}\r\n\r\nexport default useMarvelService;","import { useParams, Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport useMarvelService from '../../../services/MarvelService';\r\nimport setContent from '../../../utils/setContent';\r\n\r\nimport './singleCharacterLayout.scss';\r\n\r\nconst SingleCharacterPage = () => {\r\n\r\n  const {characterName} = useParams();\r\n\r\n  const [char, setChar] = useState({});\r\n\r\n  const {process, setProcess, getCharacterByName, clearError} = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, [characterName])\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    getCharacterByName(characterName)\r\n      .then(onComicLoaded)\r\n      .then(() => setProcess('confirmed'))\r\n      .catch(() => setProcess('error'));\r\n  }\r\n\r\n  const onComicLoaded = (characterName) => {\r\n    setChar(characterName);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {setContent(process, View, char)}\r\n    </>\r\n  )\r\n}\r\n\r\nconst View = ({data}) => {\r\n  const {thumbnail, name, description} = data;\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <img src={thumbnail} alt={name} className=\"single-comic__char-img\"/>\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{name}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n      </div>\r\n      <Link to=\"/\" className=\"single-comic__back\">Back to all</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleCharacterPage;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n  return (\r\n    <>\r\n      <p className=\"char__select\">Please select a character to see information</p>\r\n      <div className=\"skeleton\">\r\n        <div className=\"pulse skeleton__header\">\r\n          <div className=\"pulse skeleton__circle\"></div>\r\n          <div className=\"pulse skeleton__mini\"></div>\r\n        </div>\r\n        <div className=\"pulse skeleton__block\"></div>\r\n        <div className=\"pulse skeleton__block\"></div>\r\n        <div className=\"pulse skeleton__block\"></div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Skeleton/>;\r\n    case 'loading':\r\n      return <Spinner/>;\r\n    case 'confirmed':\r\n      return <Component data={data}/>;\r\n    case 'error': \r\n      return <ErrorMessage/>;\r\n    default: \r\n      break;\r\n  }\r\n}\r\n\r\nexport default setContent;"],"sourceRoot":""}