{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/pages/singleComicPage/SingleComicPage.js","services/MarvelService.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","View","data","title","description","pages","prices","thumbnail","className","to","SingleComicPage","comicId","useParams","useState","comic","setComic","useMarvelService","process","setProcess","getSingleComic","clearError","useEffect","updateComic","then","onComicLoaded","catch","setContent","axios","require","default","useCallback","_apiBase","_apiKey","_baseOffset","getAllCharacters","a","offset","get","res","results","map","_transformChar","getCharacter","id","getCharacterByName","name","char","slice","path","extension","homepage","urls","url","wiki","comics","available","items","_transformComics","getAllComics","pageCount","shop","price","Skeleton","Component","Spinner"],"mappings":"uHAAe,UAA0B,kC,OCU1BA,IARM,WACnB,OACE,qBACEC,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAASC,UAAW,UAAWC,OAAQ,UAC1FC,IAAKC,EAAKC,IAAI,oB,wGCkCdC,EAAO,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACNC,EAAgDD,EAAhDC,MAAOC,EAAyCF,EAAzCE,YAAaC,EAA4BH,EAA5BG,MAAOC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,UAE1C,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKV,IAAKS,EAAWP,IAAKG,EAAOK,UAAU,sBAC3C,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,qBAAd,SAAoCL,IACpC,mBAAGK,UAAU,sBAAb,SAAoCJ,IACpC,mBAAGI,UAAU,sBAAb,SAAoCH,IACpC,mBAAGG,UAAU,sBAAb,6BACA,qBAAKA,UAAU,sBAAf,SAAsCF,OAExC,cAAC,IAAD,CAAMG,GAAG,UAAUD,UAAU,qBAA7B,6BAKSE,UAjDS,WAEtB,IAAOC,EAAWC,cAAXD,QACP,EAA0BE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA0DC,cAAnDC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,eAAgBC,EAA5C,EAA4CA,WAE5CC,qBAAU,WACRC,MAEC,CAACX,IAEJ,IAAMW,EAAc,WAClBF,IACAD,EAAeR,GACZY,KAAKC,GACLD,MAAK,kBAAML,EAAW,gBACtBO,OAAM,kBAAMP,EAAW,aAGtBM,EAAgB,SAACV,GACrBC,EAASD,IAGX,OACE,mCACGY,YAAWT,EAAShB,EAAMa,O,2ECjC3Ba,EAAQC,EAAQ,IAASC,QA+EhBb,IA7EU,WACvB,MAA8BH,mBAAS,WAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEME,EAAaU,uBAAY,WAC7BZ,EAAW,aACV,IAEGa,EAAW,4CACXC,EAAU,0CACVC,EAAc,IAEdC,EAAgB,uCAAG,0CAAAC,EAAA,6DAAOC,EAAP,+BAAgBH,EACvCf,EAAW,WADY,SAELS,EAAMU,IAAN,UAAaN,EAAb,qCAAkDK,EAAlD,YAA4DJ,IAFvD,cAEjBM,EAFiB,yBAGhBA,EAAIpC,KAAKA,KAAKqC,QAAQC,IAAIC,IAHV,2CAAH,qDAMhBC,EAAY,uCAAG,WAAOC,GAAP,eAAAR,EAAA,6DACnBjB,EAAW,WADQ,SAEDS,EAAMU,IAAN,UAAaN,EAAb,sBAAmCY,EAAnC,YAAyCX,IAFxC,cAEbM,EAFa,yBAGZG,EAAeH,EAAIpC,KAAKA,KAAKqC,QAAQ,KAHzB,2CAAH,sDAMZK,EAAkB,uCAAG,WAAOC,GAAP,eAAAV,EAAA,6DACzBjB,EAAW,WADc,SAEPS,EAAMU,IAAN,UAAaN,EAAb,2BAAwCc,EAAxC,YAAgDb,IAFzC,cAEnBM,EAFmB,yBAGlBG,EAAeH,EAAIpC,KAAKA,KAAKqC,QAAQ,KAHnB,2CAAH,sDAMlBE,EAAiB,SAACK,GACtB,MAAO,CACLD,KAAMC,EAAKD,KACXzC,YAAa0C,EAAK1C,YAAL,UAAsB0C,EAAK1C,YAAY2C,MAAM,EAAG,KAAhD,OAA4D,kCACzExC,UAAWuC,EAAKvC,UAAUyC,KAAO,IAAMF,EAAKvC,UAAU0C,UACtDC,SAAUJ,EAAKK,KAAK,GAAGC,IACvBC,KAAMP,EAAKK,KAAK,GAAGC,IACnBT,GAAIG,EAAKH,GACTW,OAAkC,IAA1BR,EAAKQ,OAAOC,UAAkBT,EAAKQ,OAAOE,MAAMT,MAAM,EAAG,IAAM,CAAC,CAACF,KAAM,sCAI7E1B,EAAc,uCAAG,WAAOwB,GAAP,eAAAR,EAAA,6DACrBjB,EAAW,WADU,SAEHS,EAAMU,IAAN,UAAaN,EAAb,kBAA+BY,EAA/B,YAAqCX,IAFlC,cAEfM,EAFe,yBAGdmB,EAAiBnB,EAAIpC,KAAKA,KAAKqC,QAAQ,KAHzB,2CAAH,sDAMdmB,EAAY,uCAAG,0CAAAvB,EAAA,6DAAOC,EAAP,+BAAgBH,EACnCf,EAAW,WADQ,SAEDS,EAAMU,IAAN,UAAaN,EAAb,iCAA8CK,EAA9C,YAAwDJ,IAFvD,cAEbM,EAFa,yBAGZA,EAAIpC,KAAKA,KAAKqC,QAAQC,IAAIiB,IAHd,2CAAH,qDAMZA,EAAmB,SAACH,GACxB,MAAO,CACLnD,MAAOmD,EAAOnD,MACdC,YAAakD,EAAOlD,YAAckD,EAAOlD,YAAc,oDACvDC,MAAOiD,EAAOK,UAAY,SAC1BC,KAAMN,EAAOH,KAAKC,IAClB9C,OAAQgD,EAAOhD,OAAO,GAAGuD,MAAQP,EAAOhD,OAAO,GAAGuD,MAAQ,IAAM,8CAChEtD,UAAW+C,EAAO/C,UAAUyC,KAAO,IAAMM,EAAO/C,UAAU0C,UAC1DN,GAAIW,EAAOX,KAIf,MAAO,CACL1B,UACAC,aACAgB,mBACAQ,eACAE,qBACAzB,iBACAuC,eACAtC,gB,kEC1DW0C,EAjBE,WACf,OACE,qCACE,mBAAGtD,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEjB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iCCMRkB,IAfI,SAACT,EAAS8C,EAAW7D,GACtC,OAAQe,GACN,IAAK,UACH,OAAO,cAAC,EAAD,IACT,IAAK,UACH,OAAO,cAAC+C,EAAA,EAAD,IACT,IAAK,YACH,OAAO,cAACD,EAAD,CAAW7D,KAAMA,IAC1B,IAAK,QACH,OAAO,cAACX,EAAA,EAAD,O","file":"static/js/7.a11d7354.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img \r\n      style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} \r\n      src={img} alt=\"Loading error\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useParams, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport setContent from '../../../utils/setContent';\n\nimport useMarvelService from '../../../services/MarvelService';\n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n\n  const {comicId} = useParams();\n  const [comic, setComic] = useState({});\n\n  const {process, setProcess, getSingleComic, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateComic();\n    // eslint-disable-next-line\n  }, [comicId])\n\n  const updateComic = () => {\n    clearError();\n    getSingleComic(comicId)\n      .then(onComicLoaded)\n      .then(() => setProcess('confirmed'))\n      .catch(() => setProcess('error'));\n  }\n\n  const onComicLoaded = (comic) => {\n    setComic(comic);\n  }\n\n  return (\n    <>\n      {setContent(process, View, comic)}\n    </>\n  )\n}\n\nconst View = ({data}) => {\n  const {title, description, pages, prices, thumbnail} = data;\n\n  return (\n    <div className=\"single-comic\">\n      <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n      <div className=\"single-comic__info\">\n        <h2 className=\"single-comic__name\">{title}</h2>\n        <p className=\"single-comic__descr\">{description}</p>\n        <p className=\"single-comic__descr\">{pages}</p>\n        <p className=\"single-comic__descr\">Language: en-us</p>\n        <div className=\"single-comic__price\">{prices}</div>\n      </div>\n      <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n    </div>\n  )\n}\n\nexport default SingleComicPage;","import { useState, useCallback } from \"react\";\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst useMarvelService = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=1993ba6ffb336a484ae8d64ac5c9983a';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformChar);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const _transformChar = (char) => {\r\n    return {\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'We have no information about...',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      id: char.id,\r\n      comics: char.comics.available !== 0 ? char.comics.items.slice(0, 10) : [{name: 'We have no information about...'}],\r\n    }\r\n  }\r\n\r\n  const getSingleComic = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformComics);\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      title: comics.title,\r\n      description: comics.description ? comics.description : 'We have no description information for this comic',\r\n      pages: comics.pageCount + ' pages',\r\n      shop: comics.urls.url,\r\n      prices: comics.prices[0].price ? comics.prices[0].price + '$' : 'We have no price information for this comic',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      id: comics.id,\r\n    }\r\n  }\r\n\r\n  return {\r\n    process, \r\n    setProcess, \r\n    getAllCharacters, \r\n    getCharacter, \r\n    getCharacterByName, \r\n    getSingleComic, \r\n    getAllComics, \r\n    clearError,\r\n  }\r\n}\r\n\r\nexport default useMarvelService;","import './skeleton.scss';\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">Please select a character to see information</p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Skeleton/>;\r\n    case 'loading':\r\n      return <Spinner/>;\r\n    case 'confirmed':\r\n      return <Component data={data}/>;\r\n    case 'error': \r\n      return <ErrorMessage/>;\r\n    default: \r\n      break;\r\n  }\r\n}\r\n\r\nexport default setContent;"],"sourceRoot":""}