{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","components/pages/MainPage.js","services/MarvelService.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","View","data","name","description","thumbnail","homepage","wiki","imgObjectFit","includes","className","href","RandomChar","useState","char","setChar","useEffect","updateChar","useMarvelService","process","setProcess","getCharacter","clearError","id","Math","floor","random","then","onCharLoaded","catch","setContent","onClick","mjolnir","Component","newItemLoading","Spinner","CharList","props","charList","setCharList","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","arr","items","map","item","imgStyle","selectedChar","tabIndex","onCharSelected","onKeyPress","e","code","renderItems","disabled","comics","i","CharInfo","charId","ErrorBoundary","state","error","errorInfo","console","log","this","setState","children","CharSearchForm","getCharacterByName","onFoundChar","errorMessage","results","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","MainPage","decoration","axios","require","default","useCallback","_apiBase","_apiKey","_baseOffset","a","get","res","_transformChar","slice","path","extension","urls","url","available","getSingleComic","_transformComics","getAllComics","title","pages","pageCount","shop","prices","price","Skeleton"],"mappings":"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","file":"static/js/5.7b0235e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img \r\n      style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} \r\n      src={img} alt=\"Loading error\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n  const [char, setChar] = useState({});\n\n  useEffect(() => {\n    updateChar();\n    // eslint-disable-next-line\n  }, [])\n\n  const {process, setProcess, getCharacter, clearError} = useMarvelService();\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n    getCharacter(id)\n      .then(onCharLoaded)\n      .then(() => setProcess('confirmed'))\n      .catch(() => setProcess('error'));\n  }\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  }\n\n  return (\n    <div className=\"randomchar\">\n      {setContent(process, View, char)}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!<br/>\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">\n          Or choose another one\n        </p>\n        <button className=\"button button__main\"\n          onClick={updateChar}>\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n      </div>\n    </div>\n  )\n}\n\nconst View = ({data}) => {\n  const {name, description, thumbnail, homepage, wiki} = data;\n  let imgObjectFit = 'cover';\n  \n  if (thumbnail && thumbnail.includes('image_not_available')) {\n    imgObjectFit = 'contain';\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n    <img \n      src={thumbnail} \n      alt=\"Random character\" \n      className=\"randomchar__img\"\n      style={{objectFit: `${imgObjectFit}`}}\n      />\n    <div className=\"randomchar__info\">\n      <p className=\"randomchar__name\">{name}</p>\n      <p className=\"randomchar__descr\">\n        {description}\n      </p>\n      <div className=\"randomchar__btns\">\n        <a href={homepage} className=\"button button__main\">\n          <div className=\"inner\">homepage</div>\n        </a>\n        <a href={wiki} className=\"button button__secondary\">\n          <div className=\"inner\">Wiki</div>\n        </a>\n      </div>\n    </div>\n  </div>\n  )\n}\n\nexport default RandomChar;","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case 'waiting':\n      return <Spinner/>;\n    case 'loading':\n      return newItemLoading ? <Component/> : <Spinner/>;\n    case 'confirmed':\n      return <Component/>;\n    case 'error': \n      return <ErrorMessage/>;\n    default: \n      break;\n  }\n}\n\nconst CharList  = (props) => {\n\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const {process, setProcess, getAllCharacters} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, [])\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n      .then(() => setProcess('confirmed'))\n      .catch(() => setProcess('error'));\n  }\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList]);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n    setCharEnded(charEnded => ended);\n  }\n\n  function renderItems(arr) {\n    const items = arr.map((item) => {\n      let imgStyle = {'objectFit' : 'cover'};\n      if (item.thumbnail.includes('image_not_available')) {\n        imgStyle = {'objectFit' : 'unset'};\n      }\n\n      let className = 'char__item';\n      if (item.id === props.selectedChar) {\n        className += ' char__item_selected'\n      }\n\n      return (\n        <li className={className}\n          tabIndex={0}\n          key={item.id}\n          onClick={ () => props.onCharSelected(item.id) }\n          onKeyPress={ (e) => e.code === 'Enter' ? props.onCharSelected(item.id) : null }>\n            <img src={item.thumbnail} \n              alt={item.name}\n              style={imgStyle}/>\n            <div className=\"char__name\">{item.name}</div>\n        </li>\n      )\n    })\n\n    return (\n      <ul className=\"char__grid\">\n        {items}\n      </ul>\n    )\n  }\n\n  return (\n    <div className=\"char__list\">\n      {setContent(process, () => renderItems(charList), newItemLoading)}\n      <button className=\"button button__main button__long\"\n          disabled={newItemLoading}\n          style={{'display': charEnded ? 'none' : 'block'}}\n          onClick={() => onRequest(offset)}>\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  )\n\n}\n\nexport default CharList;","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n  const [char, setChar] = useState(null);\n  const {process, setProcess, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    updateChar();\n    // eslint-disable-next-line\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const {charId} = props;\n\n    if(!charId) {\n      return;\n    }\n\n    clearError();\n\n    getCharacter(charId)\n      .then(onCharLoaded)\n      .then(() => setProcess('confirmed'))\n      .catch(() => setProcess('error'));\n  }\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  }\n\n  return (\n    <div className=\"char__info\">\n      {setContent(process, View, char)}\n    </div>\n  )\n\n}\n\nconst View = ({data}) => {\n  const {name, description, thumbnail, homepage, wiki, comics} = data;\n  let imgStyle = {'objectFit' : 'cover'};\n\n  if (thumbnail.includes('image_not_available')) {\n    imgStyle = {'objectFit' : 'unset'};\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle}/>\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n        {description}\n      </div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n\n        {\n          comics.map((item, i) => {\n            return (\n              <li key={i} className=\"char__comics-item\">\n                {item.name}\n              </li>\n            )\n          })\n        }\n\n      </ul>\n    </>\n  )\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n\r\n    this.setState({\r\n      error: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = (props) => {\r\n  const [char, setChar] = useState('');\r\n  const {process, setProcess, getCharacterByName, clearError} = useMarvelService();\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n    props.onFoundChar(char);\r\n  }\r\n\r\n  const updateChar = (name) => {\r\n    clearError();\r\n\r\n    getCharacterByName(name)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess('confirmed'))\r\n      .catch(() => setProcess('error'));\r\n  }\r\n\r\n  const errorMessage = process === 'error' ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n  const results = !char ? null : \r\n    char ?\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">There is! Visit {char.name} page?</div>\r\n      <Link to={`/characters/${char.name}`} className=\"button button__secondary\">\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div> \r\n    : \r\n    <div className=\"char__search-error\">\r\n      The character was not found. Check the name and try again\r\n    </div>;\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues = {{\r\n          charName: char\r\n        }}\r\n        validationSchema = {Yup.object({\r\n          charName: Yup.string().required('This field is required')\r\n        })}\r\n        onSubmit = { ({charName}) => {\r\n          updateChar(charName);\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field \r\n              id=\"charName\" \r\n              name='charName' \r\n              type='text' \r\n              placeholder=\"Enter name\"/>\r\n            <button \r\n              type='submit' \r\n              className=\"button button__main\"\r\n              disabled={process === 'loading'}>\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n        </Form>\r\n      </Formik>\r\n      {results}\r\n      {errorMessage}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharSearchForm;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = (props) => {\r\n\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <ErrorBoundary>   \r\n        <RandomChar/>\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList \r\n            onCharSelected={onCharSelected}\r\n            selectedChar={selectedChar}/>\r\n        </ErrorBoundary>\r\n        <div>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar}/>\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharSearchForm onFoundChar={props.onFoundChar}/>\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPage;","import { useState, useCallback } from \"react\";\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst useMarvelService = () => {\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=1993ba6ffb336a484ae8d64ac5c9983a';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformChar);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return _transformChar(res.data.data.results[0]);\r\n  }\r\n\r\n  const _transformChar = (char) => {\r\n    return {\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'We have no information about...',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      id: char.id,\r\n      comics: char.comics.available !== 0 ? char.comics.items.slice(0, 10) : [{name: 'We have no information about...'}],\r\n    }\r\n  }\r\n\r\n  const getSingleComic = async (id) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    setProcess('loading');\r\n    const res = await axios.get(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.data.results.map(_transformComics);\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      title: comics.title,\r\n      description: comics.description ? comics.description : 'We have no description information for this comic',\r\n      pages: comics.pageCount + ' pages',\r\n      shop: comics.urls.url,\r\n      prices: comics.prices[0].price ? comics.prices[0].price + '$' : 'We have no price information for this comic',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      id: comics.id,\r\n    }\r\n  }\r\n\r\n  return {\r\n    process, \r\n    setProcess, \r\n    getAllCharacters, \r\n    getCharacter, \r\n    getCharacterByName, \r\n    getSingleComic, \r\n    getAllComics, \r\n    clearError,\r\n  }\r\n}\r\n\r\nexport default useMarvelService;","import './skeleton.scss';\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className=\"char__select\">Please select a character to see information</p>\n      <div className=\"skeleton\">\n        <div className=\"pulse skeleton__header\">\n          <div className=\"pulse skeleton__circle\"></div>\n          <div className=\"pulse skeleton__mini\"></div>\n        </div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n        <div className=\"pulse skeleton__block\"></div>\n      </div>\n    </>\n  )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Skeleton/>;\r\n    case 'loading':\r\n      return <Spinner/>;\r\n    case 'confirmed':\r\n      return <Component data={data}/>;\r\n    case 'error': \r\n      return <ErrorMessage/>;\r\n    default: \r\n      break;\r\n  }\r\n}\r\n\r\nexport default setContent;"],"sourceRoot":""}